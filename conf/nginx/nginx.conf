user  nginx root;
worker_processes  auto;

env DOMAIN=magento.test;
env MAGE_RUN_TYPE=website;
env MAGE_DEBUG_SHOW_ARGS=0;

pid ./var/run/nginx.pid;
#load_module modules/ngx_http_js_module.so;
#load_module modules/ngx_http_image_filter_module.so;

events {
    worker_connections  1024;
}

http {
    # js_include fetch_env.js;
    # js_set $domain get_domain;
    # js_set $mage_run_type get_mage_run_type;
    # js_set $mage_debug_show_args get_mage_debug_show_args;

    error_log     ./var/log/error.log error;
    include       ./mime.types;
    default_type  application/octet-stream;

    log_format mtail '$host $remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent $request_time '
                     '"$http_referer" "$http_user_agent" "$content_type" "$upstream_cache_status"';

    access_log on;
    log_not_found off;
    log_subrequest off;
    rewrite_log off;
    #resolver 127.0.0.11;
    sendfile on;

    #timeout zone
    keepalive_timeout  65;
    client_body_timeout 11;
    client_header_timeout 12;
    proxy_read_timeout 13;
    send_timeout 14;
    fastcgi_read_timeout 6000s;
    fastcgi_connect_timeout 10s;
    client_max_body_size 100m;
    client_body_buffer_size 1m;
    tcp_nopush     on;

    # upstream fastcgi_backend {
        #server app:9000;
    #}

    server {
        listen 8080;
        location /nginx_status {
            access_log  off;
            stub_status on;
        }
        location = /fpm_status {
            access_log off;
            # include fastcgi_params;
            # fastcgi_pass fastcgi_backend;
            fastcgi_pass unix:./var/run/php-fpm.sock;
        }
        location = /fpm_ping {
            access_log off;
            # include fastcgi_params;
            include fastcgi.conf;
            # fastcgi_pass fastcgi_backend;
            fastcgi_pass unix:./var/run/php-fpm.sock;
        }
    }

    server {
        # Enable QUIC and HTTP/3.
        #listen 443 quic reuseport;
        # Enable HTTP/2 (optional).
        # listen 443 ssl http2;
        listen 3000;

        server_name ~^(?<mage_code>[^.]*).$domain;
        set $MAGE_ROOT ./magento2ce;

        # ssl_certificate /etc/nginx/server.crt;
        # ssl_certificate_key /etc/nginx/server.key;
        # Enable all TLS versions (TLSv1.3 is required for QUIC).
        # ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        # Add Alt-Svc header to negotiate HTTP/3.
        #add_header alt-svc 'h3-23=":443"; ma=86400';

        root $MAGE_ROOT/pub;
        index index.php;
        autoindex off;
        charset UTF-8;
        error_page 404 403 = /errors/404.php;
        add_header X-Frame-Options "SAMEORIGIN";
        access_log ./var/log/mtail.log mtail;

        gzip on;
        gzip_disable "msie6";
        gzip_comp_level 6;
        gzip_min_length 1100;
        gzip_buffers 16 8k;
        gzip_proxied any;
        gzip_vary on;
        gzip_types
            text/plain
            text/css
            text/js
            text/xml
            text/javascript
            application/javascript
            application/x-javascript
            application/json
            application/xml
            application/xml+rss
            image/svg+xml;

        location @not_found_media {
            add_header Cache-Control "public";
            expires +1y;
            try_files /get.php$is_args$args =404;
        }

        location / {
            proxy_cookie_path / "/; secure; HttpOnly; SameSite=strict";
            try_files $uri /index.php$is_args$args;
        }

        location = /favicon.ico {
            alias $MAGE_ROOT/pub/errors/default/images/favicon.ico;
        }

        # Setup
        location ~* ^/setup($|/) {
            root $MAGE_ROOT;
            location ~ ^/setup/index.php {
                # fastcgi_pass   fastcgi_backend;

                fastcgi_pass unix:./var/run/php-fpm.sock;
                fastcgi_index  index.php;
                fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
                #include        fastcgi_params;
                include fastcgi.conf;
            }
        }

        # Update
        location ~* ^/update($|/) {
            root $MAGE_ROOT;
            location ~ ^/update/index.php {
                fastcgi_split_path_info ^(/update/index.php)(/.+)$;

                fastcgi_pass unix:./var/run/php-fpm.sock;
                # fastcgi_pass   fastcgi_backend;
                fastcgi_index  index.php;
                fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param  PATH_INFO $fastcgi_path_info;
                #include        fastcgi_params;
                include fastcgi.conf;
            }
        }

        # Static
        location /static/ {
            location ~ ^/static/version {
                rewrite ^/static/(version\d*/)?(.*)$ /static/$2 last;
            }
            location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2|html|json)$ {
                add_header Cache-Control "public";
                expires    +1y;
                if (!-f $request_filename) {
                    rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
                }
            }
            location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
                add_header Cache-Control "no-store";
                expires    off;
                if (!-f $request_filename) {
                   rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
                }
            }
            if (!-f $request_filename) {
                rewrite ^/static/(version\d*/)?(.*)$ /static.php?resource=$2 last;
            }
        }

        # Media
        location /media/ {
#            location ~* ^/media/.*\.jpe?g$ {
#                resolver 8.8.8.8;
#                set $bucket 'duhon';
#                image_filter resize $arg_width $arg_height;
#                image_filter_interlace on;
#                image_filter_jpeg_quality 90;
#                image_filter_buffer 50M;
#                #error_page 415 = @not_found_media;
#                error_page 415 = http://s3.amazonaws.com/$bucket$uri;
#                proxy_pass http://s3.amazonaws.com/$bucket$uri;
#                proxy_pass_request_body off;
#                proxy_pass_request_headers off;
#                proxy_intercept_errors on;
#                proxy_hide_header "x-amz-id-2";
#                proxy_hide_header "x-amz-request-id";
#                proxy_hide_header "x-amz-storage-class";
#                proxy_hide_header "Set-Cookie";
#                proxy_ignore_headers "Set-Cookie";
#            }
            location ~* \.(ico|jpg|jpeg|png|gif|svg|js|css|swf|eot|ttf|otf|woff|woff2)$ {
                add_header Cache-Control "public";
                expires    +1y;
                try_files  $uri /get.php$is_args$args;
            }
            location ~* \.(zip|gz|gzip|bz2|csv|xml)$ {
                add_header Cache-Control "no-store";
                expires    off;
                try_files  $uri /get.php$is_args$args;
            }
        }

        # Main
        location ~ ^/(index|get|static|errors/report|errors/404|errors/503|health_check)\.php$ {
            #include fastcgi_params;
            include fastcgi.conf;
            # fastcgi_pass fastcgi_backend;

            fastcgi_pass unix:./var/run/php-fpm.sock;
            fastcgi_buffers 16 16k;
            fastcgi_buffer_size 32k;
            fastcgi_index index.php;

            #set $MAGE_RUN_TYPE website or store;
            # fastcgi_param MAGE_RUN_TYPE $mage_run_type;
            # fastcgi_param MAGE_DEBUG_SHOW_ARGS $mage_debug_show_args;
            # fastcgi_param MAGE_RUN_CODE $mage_code;
            fastcgi_param SERVER_NAME $host;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }

        #only for function test
        location ~ ^/dev/tests/(acceptance|functional)/utils($|/) {
            root $MAGE_ROOT;
            # fastcgi_pass   fastcgi_backend;

            fastcgi_pass unix:./var/run/php-fpm.sock;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            #include        fastcgi_params;
            include fastcgi.conf;
        }
    }
}
